<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Qaamgo\Models;

use \ArrayAccess;

class Job implements ArrayAccess {
  static $swaggerTypes = array(
      'id' => 'string',
      'token' => 'string',
      'type' => 'string',
      'status' => 'Status',
      'process' => 'boolean',
      'conversion' => 'array[Conversion]',
      'input' => 'array[InputFile]',
      'callback' => 'string',
      'server' => 'string',
      'created_at' => 'DateTime',
      'modified_at' => 'DateTime'
  );

  static $attributeMap = array(
      'id' => 'id',
      'token' => 'token',
      'type' => 'type',
      'status' => 'status',
      'process' => 'process',
      'conversion' => 'conversion',
      'input' => 'input',
      'callback' => 'callback',
      'server' => 'server',
      'created_at' => 'created_at',
      'modified_at' => 'modified_at'
  );


  /**
  * Unique identifier for the job.
  */
  public $id; /* string */
  /**
  * Token to identify client allowed to run the job.
  */
  public $token; /* string */
  /**
  * Type of the job created.
  */
  public $type; /* string */
  /**
  * Current status for the job
  */
  public $status; /* Status */
  /**
  * Determine if the job must be processed as soon as it is ready.
  */
  public $process; /* boolean */
  /**
  * Type of conversion or conversions to be carried out.
  */
  public $conversion; /* array[Conversion] */
  /**
  * Source or sources of the files to be converted.
  */
  public $input; /* array[InputFile] */
  /**
  * Callback url to the the status updates
  */
  public $callback; /* string */
  /**
  * Server assigned for file uploads and downloads
  */
  public $server; /* string */
  /**
  * Date and time when the job was created.
  */
  public $created_at; /* DateTime */
  /**
  * Date and time when the job was last modified.
  */
  public $modified_at; /* DateTime */

  public function __construct(array $data = null) {
    $this->id = $data["id"];
    $this->token = $data["token"];
    $this->type = $data["type"];
    $this->status = $data["status"];
    $this->process = $data["process"];
    $this->conversion = $data["conversion"];
    $this->input = $data["input"];
    $this->callback = $data["callback"];
    $this->server = $data["server"];
    $this->created_at = $data["created_at"];
    $this->modified_at = $data["modified_at"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
