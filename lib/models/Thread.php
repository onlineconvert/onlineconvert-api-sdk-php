<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Qaamgo\Models;

use \ArrayAccess;

class Thread implements ArrayAccess {
  static $swaggerTypes = array(
      'hash' => 'string',
      'status' => 'int',
      'info' => 'string',
      'created_at' => 'DateTime',
      'modified_at' => 'DateTime'
  );

  static $attributeMap = array(
      'hash' => 'hash',
      'status' => 'status',
      'info' => 'info',
      'created_at' => 'created_at',
      'modified_at' => 'modified_at'
  );


  /**
  * Unique identifier of the thread.
  */
  public $hash; /* string */
  /**
  * Status of the thread.
  */
  public $status; /* int */
  /**
  * Extra information.
  */
  public $info; /* string */
  /**
  * Date and time when the job was created.
  */
  public $created_at; /* DateTime */
  /**
  * Date and time when the job was last modified.
  */
  public $modified_at; /* DateTime */

  public function __construct(array $data = null) {
    $this->hash = $data["hash"];
    $this->status = $data["status"];
    $this->info = $data["info"];
    $this->created_at = $data["created_at"];
    $this->modified_at = $data["modified_at"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
